name: Build Lambda Layers

on:
  push:
    paths:
      - 'backend/requirements*.txt'
  workflow_dispatch:

jobs:
  build-and-publish-layers:
    runs-on: ubuntu-latest

    env:
      S3_BUCKET: hackathon-lambda-ap-ai-cyberark
      PYTHON_VERSION: python3.12

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: AKIAT5VEV4FHFQQJBZVX
          aws-secret-access-key: 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
          aws-region: us-east-1

      - name: Build and publish each layer from backend/layers/
        run: |
          mkdir -p layer_zips

          for req_file in backend/requirements*.txt; do
            LAYER_NAME=$(basename "$req_file" .txt)
            echo "üîß Building Lambda layer: $LAYER_NAME from $req_file"

            # Clean previous layer build
            rm -rf layer_build
            mkdir -p layer_build/python

            # Install dependencies
            pip install --upgrade --no-cache-dir -r "$req_file" -t layer_build/python

            # Clean up unnecessary files
            find layer_build/python -type d -name "__pycache__" -exec rm -rf {} +
            find layer_build/python -type d -name "tests" -exec rm -rf {} +
            find layer_build/python -type f -name "*.pyc" -delete
            find layer_build/python -type d \( -name "*.dist-info" -o -name "*.egg-info" \) -exec rm -rf {} +

            # Optional: strip native extensions
            find layer_build/python -type f \( -name "*.so" -o -name "*.pyd" \) -exec strip {} \; 2>/dev/null || true

            # Check size
            echo "üìè Size of $LAYER_NAME before zipping:"
            du -sh layer_build/python

            # Zip layer
            ZIP_PATH="layer_zips/${LAYER_NAME}.zip"
            cd layer_build
            zip -q -r "../${ZIP_PATH}" python || (echo "‚ùå Zipping failed" && exit 1)
            cd ..

            # Upload to S3
            echo "üì§ Uploading $ZIP_PATH to S3"
            aws s3 cp "${ZIP_PATH}" "s3://$S3_BUCKET/layers/${LAYER_NAME}.zip"

            # Publish Lambda layer
            echo "üöÄ Publishing Lambda layer: $LAYER_NAME"
            LAYER_ARN=$(aws lambda publish-layer-version \
              --layer-name "$LAYER_NAME" \
              --description "Lambda layer built from $req_file" \
              --content S3Bucket=$S3_BUCKET,S3Key=layers/${LAYER_NAME}.zip \
              --compatible-runtimes $PYTHON_VERSION \
              --query 'LayerVersionArn' --output text)

            echo "‚úÖ Published $LAYER_NAME: $LAYER_ARN"

            # Clean up
            rm -rf layer_build "${ZIP_PATH}"
          done